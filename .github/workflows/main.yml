name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build-and-push:
    name: "Build container image"
    runs-on: ubuntu-latest
    env:
      BUILD_MAJOR_VERSION: 1
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: "Configure AWS Credentials"
      id: aws-credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ vars.AWS_REGION }}
    - name: "Login to AWS ECR"
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
      with:
        mask-password: "true"
    - name: "Build, tag, and push container image to AWS ECR"
      id: build-image
      run: |
        IMAGE_BUILD_DATE=$(date '+%Y%m%d')
        IMAGE_TAG="${{ env.BUILD_MAJOR_VERSION }}.$IMAGE_BUILD_DATE.$GITHUB_RUN_NUMBER" >> $GITHUB_ENV
        echo "docker build -t ${{ steps.login-ecr.outputs.registry }}/${{ vars.CONTAINER_IMAGE_REPO }}:$IMAGE_TAG --pull --build-arg IMAGE_CREATED=$IMAGE_BUILD_DATE --build-arg IMAGE_VERSION=${{ env.BUILD_MAJOR_VERSION }} --build-arg IMAGE_REVISION=${{ github.sha }} ."
    - name: "Push image"
      id: push-image
      run: |
        echo "From GITHUB_ENV: ${{env.IMAGE_TAG}}"
        echo "From steps: ${{steps.build-image.outputs.IMAGE_TAG}}"
        echo "docker push ${{ steps.login-ecr.outputs.registry }}/${{ vars.CONTAINER_IMAGE_REPO }}:${{env.IMAGE_TAG}}"
